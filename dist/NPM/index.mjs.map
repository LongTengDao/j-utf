{
	"version":
		3,
	"file":
		"index.mjs",
	"sourceRoot":
		"../../src/",
	"sources":
		["version?text","NON_SCALAR.ts","buffer2number.ts","buffer2string.ts","buffer2object.ts","string2array.ts","export.ts"],
	"sourcesContent":
		[
			"export default '3.0.0';",
			"import RegExp from '.RegExp';\nimport RegExp_prototype from '.RegExp.prototype';\n\nexport default (\n\t'unicode' in RegExp_prototype\n\t\t? RegExp('[\\\\uD800-\\\\uDFFF]', 'u')\n\t\t: /[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/\n);\n\n// \\u{110000}-\\u{FFFFFFFF} -> \\uFFFD\n",
			"import from from '.Buffer.from?';\n\nimport NON_SCALAR from './NON_SCALAR';\n\nexport default function buffer2number (buffer :Buffer, startsWithASCII? :boolean) :number {\n\tvar ucs :undefined | 2;\n\tvar swapped :undefined | Buffer;\n\tvar length :number = buffer.length;\n\tif ( !length ) { return -1; }\n\tvar firstByte :number = buffer[0];\n\tif ( firstByte===0xEF ) {\n\t\tif ( length===1 || buffer[1]!==0xBB ) { return 1; }\n\t\tif ( length===2 || buffer[2]!==0xBF ) { return 2; }\n\t}\n\telse if ( firstByte===0xFF ) {\n\t\tif ( length===1 || buffer[1]!==0xFE ) { return 1; }\n\t\tif ( length%2 ) { return length; }\n\t\tucs = 2;\n\t}\n\telse if ( firstByte===0xFE ) {\n\t\tif ( length===1 || buffer[1]!==0xFF ) { return 1; }\n\t\tif ( length%2 ) { return length; }\n\t\tucs = 2;\n\t\tswapped = buffer.swap16();\n\t}\n\telse if ( startsWithASCII ) {\n\t\tif ( firstByte===0x00 ) {\n\t\t\tif ( length>2 && buffer[2]===0x00 ) { return 2; }\n\t\t\tif ( length%2 ) { return length; }\n\t\t\tucs = 2;\n\t\t\tswapped = buffer.swap16();\n\t\t}\n\t\telse if ( length>1 && buffer[1]===0x00 ) {\n\t\t\tif ( length>3 && buffer[3]===0x00 ) { return 3; }\n\t\t\tif ( length%2 ) { return length; }\n\t\t\tucs = 2;\n\t\t}\n\t}\n\tvar string :string;\n\tvar coded :Buffer;\n\tif ( ucs ) {\n\t\tcoded = from(string = buffer.toString('ucs2'), 'ucs2');\n\t\tif ( swapped ) {\n\t\t\tcoded.swap16();\n\t\t\tbuffer.swap16();\n\t\t}\n\t}\n\telse { coded = from(string = buffer.toString()); }\n\tvar codedLength :number = coded.length;\n\tvar index = 0;\n\tif ( codedLength===length ) {\n\t\tfor ( ; index<length; ++index ) {\n\t\t\tif ( coded[index]!==buffer[index] ) { return index; }\n\t\t}\n\t\treturn string.search(NON_SCALAR);\n\t}\n\tif ( length>codedLength ) { length = codedLength; }\n\tfor ( ; index<length; ++index ) {\n\t\tif ( coded[index]!==buffer[index] ) { return index; }\n\t}\n\treturn index;\n};\n",
			"import Error from '.Error';\nimport from from '.Buffer.from?';\n\nimport NON_SCALAR from './NON_SCALAR';\n\nexport default function buffer2string (buffer :Buffer, options? :Options) :string {\n\t\n\tvar length :number = buffer.length;\n\tif ( !length ) { return ''; }\n\t\n\tvar encoding :undefined | 'ucs2';\n\tvar swapped :undefined | Buffer;\n\t\n\t\n\t\n\tvar throwError :boolean = !options || options.throwError!==false;\n\t\n\tvar firstByte :number = buffer[0];\n\tif ( firstByte===0xEF ) {\n\t\tif ( length>2 && buffer[1]===0xBB && buffer[2]===0xBF ) {\n\t\t\tif ( !options || options.stripBOM!==false ) { buffer = buffer.slice(3); }\n\t\t\t\n\t\t\t\n\t\t}\n\t\telse {\n\t\t\tif ( throwError ) { throw Error('残破的 UTF-8 BOM 头'); }\n\t\t\t\n\t\t\t\n\t\t}\n\t}\n\telse if ( firstByte===0xFF ) {\n\t\tif ( length>1 && buffer[1]===0xFE ) {\n\t\t\tif ( throwError && length%2 ) { throw Error('UTF-16 的字节数必须为 2 的倍数'); }\n\t\t\tif ( !options || options.stripBOM!==false ) { buffer = buffer.slice(2); }\n\t\t\tencoding = 'ucs2';\n\t\t\t\n\t\t\t\n\t\t}\n\t\telse {\n\t\t\tif ( throwError ) { throw Error('残破的 UTF-16LE BOM 头'); }\n\t\t\t\n\t\t\t\n\t\t}\n\t}\n\telse if ( firstByte===0xFE ) {\n\t\tif ( length>1 && buffer[1]===0xFF ) {\n\t\t\tif ( throwError && length%2 ) { throw Error('UTF-16 的字节数必须为 2 的倍数'); }\n\t\t\tbuffer.swap16();\n\t\t\tif ( options ) {\n\t\t\t\tif ( !options.swappable ) { swapped = buffer; }\n\t\t\t\tif ( options.stripBOM!==false ) { buffer = buffer.slice(2); }\n\t\t\t}\n\t\t\telse {\n\t\t\t\tswapped = buffer;\n\t\t\t\tbuffer = buffer.slice(2);\n\t\t\t}\n\t\t\tencoding = 'ucs2';\n\t\t\t\n\t\t\t\n\t\t}\n\t\telse {\n\t\t\tif ( throwError ) { throw Error('残破的 UTF-16BE BOM 头'); }\n\t\t\t\n\t\t\t\n\t\t}\n\t}\n\telse if ( options && options.startsWithASCII ) {\n\t\tif ( firstByte===0x00 ) {\n\t\t\tif ( throwError ) {\n\t\t\t\tif ( length>2 && buffer[2]===0x00 ) { throw Error('暂不支持 UTF-32 编码'); }\n\t\t\t\tif ( length%2 ) { throw Error('UTF-16 的字节数必须为 2 的倍数'); }\n\t\t\t}\n\t\t\tbuffer.swap16();\n\t\t\tif ( !options.swappable ) { swapped = buffer; }\n\t\t\tencoding = 'ucs2';\n\t\t\t\n\t\t}\n\t\telse if ( length>1 && buffer[1]===0x00 ) {\n\t\t\tif ( throwError ) {\n\t\t\t\tif ( length>3 && buffer[3]===0x00 ) { throw Error('暂不支持 UTF-32 编码'); }\n\t\t\t\tif ( length%2 ) { throw Error('UTF-16 的字节数必须为 2 的倍数'); }\n\t\t\t}\n\t\t\tencoding = 'ucs2';\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t\n\tvar string :string = encoding ? buffer.toString(encoding) : buffer.toString();\n\tif ( throwError ) {\n\t\tif ( from(string, encoding).equals(buffer) ) {\n\t\t\tswapped && swapped.swap16();\n\t\t\tif ( NON_SCALAR.test(string) ) { throw Error('代理对码点不能单独出现'); }\n\t\t}\n\t\telse {\n\t\t\tswapped && swapped.swap16();\n\t\t\tthrow Error('文件中存在超出 Unicode 表示范围的内容');\n\t\t}\n\t}\n\telse { swapped && swapped.swap16(); }\n\treturn string;\n\t\n};\n\ntype Options = {\n\tswappable? :boolean,\n\tstripBOM? :boolean,// = true\n\tstartsWithASCII? :boolean,\n\tthrowError? :boolean,// = true\n};\n",
			"import Error from '.Error';\nimport from from '.Buffer.from?';\n\nimport NON_SCALAR from './NON_SCALAR';\n\nexport default function buffer2object (buffer :Buffer, options? :Options) :{ BOM :'' | '\\uFEFF', UTF :'' | '8' | '16LE' | '16BE', string :string } {\n\t\n\tvar length :number = buffer.length;\n\tif ( !length ) { return { BOM: '', UTF: '', string: '' }; }\n\t\n\tvar encoding :undefined | 'ucs2';\n\tvar swapped :undefined | Buffer;\n\tvar BOM :'' | '\\uFEFF';\n\tvar UTF :'' | '8' | '16LE' | '16BE';\n\t\n\tvar throwError :boolean = !options || options.throwError!==false;\n\t\n\tvar firstByte :number = buffer[0];\n\tif ( firstByte===0xEF ) {\n\t\tif ( length>2 && buffer[1]===0xBB && buffer[2]===0xBF ) {\n\t\t\tif ( !options || options.stripBOM!==false ) { buffer = buffer.slice(3); }\n\t\t\tBOM = '\\uFEFF';\n\t\t\tUTF = '8';\n\t\t}\n\t\telse {\n\t\t\tif ( throwError ) { throw Error('残破的 UTF-8 BOM 头'); }\n\t\t\tBOM = '';\n\t\t\tUTF = '';\n\t\t}\n\t}\n\telse if ( firstByte===0xFF ) {\n\t\tif ( length>1 && buffer[1]===0xFE ) {\n\t\t\tif ( throwError && length%2 ) { throw Error('UTF-16 的字节数必须为 2 的倍数'); }\n\t\t\tif ( !options || options.stripBOM!==false ) { buffer = buffer.slice(2); }\n\t\t\tencoding = 'ucs2';\n\t\t\tBOM = '\\uFEFF';\n\t\t\tUTF = '16LE';\n\t\t}\n\t\telse {\n\t\t\tif ( throwError ) { throw Error('残破的 UTF-16LE BOM 头'); }\n\t\t\tBOM = '';\n\t\t\tUTF = '';\n\t\t}\n\t}\n\telse if ( firstByte===0xFE ) {\n\t\tif ( length>1 && buffer[1]===0xFF ) {\n\t\t\tif ( throwError && length%2 ) { throw Error('UTF-16 的字节数必须为 2 的倍数'); }\n\t\t\tbuffer.swap16();\n\t\t\tif ( options ) {\n\t\t\t\tif ( !options.swappable ) { swapped = buffer; }\n\t\t\t\tif ( options.stripBOM!==false ) { buffer = buffer.slice(2); }\n\t\t\t}\n\t\t\telse {\n\t\t\t\tswapped = buffer;\n\t\t\t\tbuffer = buffer.slice(2);\n\t\t\t}\n\t\t\tencoding = 'ucs2';\n\t\t\tBOM = '\\uFEFF';\n\t\t\tUTF = '16BE';\n\t\t}\n\t\telse {\n\t\t\tif ( throwError ) { throw Error('残破的 UTF-16BE BOM 头'); }\n\t\t\tBOM = '';\n\t\t\tUTF = '';\n\t\t}\n\t}\n\telse if ( options && options.startsWithASCII ) {\n\t\tif ( firstByte===0x00 ) {\n\t\t\tif ( throwError ) {\n\t\t\t\tif ( length>2 && buffer[2]===0x00 ) { throw Error('暂不支持 UTF-32 编码'); }\n\t\t\t\tif ( length%2 ) { throw Error('UTF-16 的字节数必须为 2 的倍数'); }\n\t\t\t}\n\t\t\tbuffer.swap16();\n\t\t\tif ( !options.swappable ) { swapped = buffer; }\n\t\t\tencoding = 'ucs2';\n\t\t\tUTF = '16BE';\n\t\t}\n\t\telse if ( length>1 && buffer[1]===0x00 ) {\n\t\t\tif ( throwError ) {\n\t\t\t\tif ( length>3 && buffer[3]===0x00 ) { throw Error('暂不支持 UTF-32 编码'); }\n\t\t\t\tif ( length%2 ) { throw Error('UTF-16 的字节数必须为 2 的倍数'); }\n\t\t\t}\n\t\t\tencoding = 'ucs2';\n\t\t\tUTF = '16LE';\n\t\t}\n\t\telse {\n\t\t\tUTF = '8';\n\t\t}\n\t\tBOM = '';\n\t}\n\telse {\n\t\tBOM = '';\n\t\tUTF = '';\n\t}\n\t\n\tvar string :string = encoding ? buffer.toString(encoding) : buffer.toString();\n\tif ( throwError ) {\n\t\tif ( from(string, encoding).equals(buffer) ) {\n\t\t\tswapped && swapped.swap16();\n\t\t\tif ( NON_SCALAR.test(string) ) { throw Error('代理对码点不能单独出现'); }\n\t\t}\n\t\telse {\n\t\t\tswapped && swapped.swap16();\n\t\t\tthrow Error('文件中存在超出 Unicode 表示范围的内容');\n\t\t}\n\t}\n\telse { swapped && swapped.swap16(); }\n\treturn { BOM, UTF, string };\n\t\n};\n\ntype Options = {\n\tswappable? :boolean,\n\tstripBOM? :boolean,// = true\n\tstartsWithASCII? :boolean,\n\tthrowError? :boolean,// = true\n};\n",
			"import RegExp from '.RegExp';\nimport RegExp_prototype from '.RegExp.prototype';\n\nvar POINTS =\n\t'dotAll' in RegExp_prototype && 'unicode' in RegExp_prototype ? RegExp('.', 'gsu') :\n\t\t'bind' in RegExp ? RegExp('[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]|[^]/', 'g') :\n\t\t\t/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\s\\S]/g;\n\nvar POINTS_CRLF =\n\t'dotAll' in RegExp_prototype && 'unicode' in RegExp_prototype ? RegExp('\\\\r\\\\n|.', 'gsu') :\n\t\t'bind' in RegExp ? RegExp('\\\\r\\\\n|[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]|[^]/', 'g') :\n\t\t\t/\\r\\n|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\s\\S]/g;\n\nexport default function string2array (string :string, crlf? :boolean) :string[] {\n\treturn string ? string.match(crlf ? POINTS_CRLF : POINTS)! : [];\n};\n",
			"import version from './version?text';\r\nimport buffer2number from './buffer2number';\r\nimport buffer2string from './buffer2string';\r\nimport buffer2object from './buffer2object';\r\nimport string2array from './string2array';\r\nimport NON_SCALAR from './NON_SCALAR';\r\n\r\nexport {\r\n\tversion,\r\n\tbuffer2number,\r\n\tbuffer2object,\r\n\tbuffer2string,\r\n\tstring2array,\r\n\tNON_SCALAR,\r\n};\r\n\r\nexport default (\r\n\t/*#__PURE__*/\r\n\tfunction (UTF) { return UTF['default'] = UTF; }({\r\n\t\tversion: version,\r\n\t\tbuffer2number: buffer2number,\r\n\t\tbuffer2object: buffer2object,\r\n\t\tbuffer2string: buffer2string,\r\n\t\tstring2array: string2array,\r\n\t\tNON_SCALAR: NON_SCALAR,\r\n\t\t'default': {} as typeof import('./default.d')\r\n\t})\r\n);\r\n"
		],
	"names":
		[],
	"mappings":
		"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"
}